//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WotC.FifthEd.SRD.Features.PlayerClass.Wizard.SchoolOfEvocation {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class FeatureWizardSchoolOfEvocationText {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal FeatureWizardSchoolOfEvocationText() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("WotC.FifthEd.SRD.Features.PlayerClass.Wizard.SchoolOfEvocation.FeatureWizardSchoo" +
                            "lOfEvocationText", typeof(FeatureWizardSchoolOfEvocationText).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Beginning at 10th level, you can add your Intelligence modifier to one damage roll of any wizard evocation spell you cast..
        /// </summary>
        internal static string Empowered_Evocation {
            get {
                return ResourceManager.GetString("Empowered Evocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Beginning when you select this school at 2nd level, the gold and time you must spend to copy an evocation spell into your spellbook is halved..
        /// </summary>
        internal static string Evocation_Savant {
            get {
                return ResourceManager.GetString("Evocation Savant", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Starting at 14th level, you can increase the power of your simpler spells. When you cast a wizard spell of 1st through 5th level that deals damage, you can deal maximum damage with that spell.
        ///The first time you do so, you suffer no adverse effect. If you use this feature again before you finish a long rest, you take 2d12 necrotic damage for each level of the spell, immediately after you cast it. Each time you use this feature again before finishing a long rest, the necrotic damage per spell level increase [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Overchannel {
            get {
                return ResourceManager.GetString("Overchannel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Starting at 6th level, your damaging cantrips affect even creatures that avoid the brunt of the effect. When a creature succeeds on a saving throw against your cantrip, the creature takes half the cantrip’s damage (if any) but suffers no additional effect from the cantrip..
        /// </summary>
        internal static string Potent_Cantrip {
            get {
                return ResourceManager.GetString("Potent Cantrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You focus your study on magic that creates powerful elemental effects such as bitter cold, searing flame, rolling thunder, crackling lightning, and burning acid. Some evokers find employment in military forces, serving as artillery to blast enemy armies from afar. Others use their spectacular power to protect the weak, while some seek their own gain as bandits, adventurers, or aspiring tyrants..
        /// </summary>
        internal static string School_of_Evocation {
            get {
                return ResourceManager.GetString("School of Evocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Beginning at 2nd level, you can create pockets of relative safety within the effects of your evocation spells. When you cast an evocation spell that affects other creatures that you can see, you can choose a number of them equal to 1 + the spell’s level. The chosen creatures automatically succeed on their saving throws against the spell, and they take no damage if they would normally take half damage on a successful save..
        /// </summary>
        internal static string Sculpt_Spells {
            get {
                return ResourceManager.GetString("Sculpt Spells", resourceCulture);
            }
        }
    }
}
